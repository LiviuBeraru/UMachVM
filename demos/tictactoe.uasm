
startGame:
CALL ausgabe
SET R10 1

gameCycle:

CALL userinput
CALL ausgabe
CALL checkWin
JMP gameCycle

finishGame:

SET R11 promptend
SET R12 endstr
SUB R12 R12 R11
OUT R11 R12 ZERO
SET R11 4
ADDI HE HE 1
IN HS R11 ZERO
LB R11 HS
SUBI HE HE 1
SET R12 0x71
CMP R11 R12
BE gameOver
SET R12 10
CMP R11 R12
BE cleanUp
JMP finishGame

cleanUp:
CP R1 ZERO
CP R2 ZERO
CP R3 ZERO
CP R4 ZERO
CP R5 ZERO
CP R6 ZERO
CP R7 ZERO
CP R8 ZERO
CP R9 ZERO
CP R20 ZERO
JMP startGame

gameOver:
EOP

writePlayerSign:
SET R15 2
CMP R11 R15     # if R11 = 2; print('O'); else print('X');
BE O
SET R15 88      # '88' = ascii 'X'
PUSH R15
CALL putchar
JMP X
O:
SET R15 79      # '79' = ascii 'O'
PUSH R15
CALL putchar
X:
RET


ausgabe:
CMP R1 ZERO
BE 1
CP R11 R1
CALL writePlayerSign 
JMP 2
1:
SET R11 1
PUSH R11
CALL printint
2:
SET R12 124 	#senkrechter strich |
PUSH R12
CALL putchar
CMP R2 ZERO
BE 3
CP R11 R2
CALL writePlayerSign 
JMP 4
3:
SET R11 2
PUSH R11
CALL printint
4:
PUSH R12
CALL putchar    # |
CMP R3 ZERO
BE 5
CP R11 R3
CALL writePlayerSign 
JMP 6
5:
SET R11 3
PUSH R11
CALL printint
6:
CALL newline

SET R13 45	#waagrechter strich -
PUSH R13
CALL putchar
SET R14 43	#kreuz +
PUSH R14
CALL putchar
PUSH R13
CALL putchar
PUSH R14
CALL putchar
PUSH R13
CALL putchar
CALL newline

CMP R4 ZERO
BE 7
CP R11 R4
CALL writePlayerSign 
JMP 8
7:
SET R11 4
PUSH R11
CALL printint
8:
PUSH R12        #senkrechter strich |
CALL putchar
CMP R5 ZERO
BE 9
CP R11 R5
CALL writePlayerSign 
JMP 10
9:
SET R11 5
PUSH R11
CALL printint
10:
PUSH R12
CALL putchar    # |
CMP R6 ZERO
BE 11
CP R11 R6
CALL writePlayerSign 
JMP 12
11:
SET R11 6
PUSH R11
CALL printint
12:
CALL newline

PUSH R13    #waagrechter strich -
CALL putchar
PUSH R14    #kreuz +
CALL putchar
PUSH R13
CALL putchar
PUSH R14
CALL putchar
PUSH R13
CALL putchar
CALL newline

CMP R7 ZERO
BE 13
CP R11 R7
CALL writePlayerSign 
JMP 14
13:
SET R11 7
PUSH R11
CALL printint
14:
PUSH R12        #senkrechter strich |
CALL putchar
CMP R8 ZERO
BE 15
CP R11 R8
CALL writePlayerSign 
JMP 16
15:
SET R11 8
PUSH R11
CALL printint
16:
PUSH R12
CALL putchar    # |
CMP R9 ZERO
BE 17
CP R11 R9
CALL writePlayerSign 
JMP 18
17:
SET R11 9
PUSH R11
CALL printint
18:
CALL newline
CALL newline
RET


userinput:
PUSH R11
PUSH R12
PUSH R13

SET R11 promptp1
SET R12 promptp2
SUB R13 R12 R11
OUT R11 R13 ZERO	# prompt "Spieler "
PUSH R10
CALL printint		# prompt player
SET R13 promptp1win
SUB R11 R13 R12
OUT R12 R11 ZERO	# prompt "ist an der Reihe"

CALL inputint
POP R11
SET R12 switchField
SUBI R11 R11 1
MULI R11 2
CP R11 LO
MULI R11 4
CP R11 LO
ADD R11 R11 R12
GO R11
switchField:
CP R1 R10
JMP switchPlayer
CP R2 R10
JMP switchPlayer
CP R3 R10
JMP switchPlayer
CP R4 R10
JMP switchPlayer
CP R5 R10
JMP switchPlayer
CP R6 R10
JMP switchPlayer
CP R7 R10
JMP switchPlayer
CP R8 R10
JMP switchPlayer
CP R9 R10

switchPlayer:
SET R11 1
CMP R10 R11
BE switchToPlayer2
SET R10 1
JMP switchedToPlayer1

switchToPlayer2:
SET R10 2

switchedToPlayer1:
POP R13
POP R12
POP R11

RET

checkWin:
PUSH R11
PUSH R12
PUSH R13
SET R11 1
SET R12 8
MUL R1 R2
MUL LO R3
CALL checkWinCase

MUL R4 R5
MUL LO R6
CALL checkWinCase

MUL R7 R8
MUL LO R9
CALL checkWinCase

MUL R1 R4
MUL LO R7
CALL checkWinCase

MUL R2 R5
MUL LO R8
CALL checkWinCase

MUL R3 R6
MUL LO R9
CALL checkWinCase

MUL R1 R5
MUL LO R9
CALL checkWinCase

MUL R3 R5
MUL LO R7
CALL checkWinCase
INC R20
SET R21 9
CMP R20 R21
BE draw
JMP checkWinFinished
draw:
SET R11 promptdraw
SET R12 promptend
SUB R12 R12 R11
OUT R11 R12 ZERO
CALL newline
JMP finishGame
checkWinFinished:
POP R13
POP R12
POP R11
RET

checkWinCase:
CMP LO R11
BE p1Won
CMP LO R12
BE p2Won
JMP nobodyWon
p1Won:
SET R11 promptp1win
SET R12 promptp2win
SUB R12 R12 R11
OUT R11 R12 ZERO
SET R11 1
PUSH R11
CALL printint
SET R11 promptp2win
SET R12 promptend
SUB R12 R12 R11
OUT R11 R12 ZERO
CALL newline
JMP finishGame
p2Won:
SET R11 promptp1win
SET R12 promptp2win
SUB R12 R12 R11
OUT R11 R12 ZERO
SET R11 2
PUSH R11
CALL printint
SET R11 promptp2win
SET R12 promptend
SUB R12 R12 R11
OUT R11 R12 ZERO
CALL newline
JMP finishGame
nobodyWon:

RET

.data
.string promptp1 "Spieler "
.string promptp2 " ist an der Reihe:"
.string promptp1win "Spieler "
.string promptp2win " gewinnt!"
.string promptdraw "Unentschieden!"
.string promptend "FÃ¼r eine weitere Runde ENTER, zum beenden q tippen."
.string endstr "1"

